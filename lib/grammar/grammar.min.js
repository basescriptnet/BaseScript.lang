(function(){function b(a){return a[0]}function q([a]){return 1<a.length?e(a[0],{type:"boolean_reversed",value:a[2]}):e(a[0],{type:"boolean",value:a[0].value})}console.clear();const e=Object.assign.bind(Object);let r=!1;var h=require("moo").compile({string:[{match:/"(?:\\["nrt]|[^"\\])*"/,value:a=>a.slice(1,-1)},{match:/'(?:\\['nrt]|[^'\\])*'/,value:a=>a.slice(1,-1)},{match:/`(?:\\[`nrt]|[^`\\])*`/,value:a=>JSON.stringify(a).slice(2,-2),lineBreaks:!0}],space:[{match:/(?:\s+|\/\/[^\n]*(?:\n+\s*)?)+/,
lineBreaks:!0,value:a=>a.replace(/\/\/[^\n]*/g,"")}],keyword:"interface void defined safeValue swap namespace Boolean Number String Array Object unless than constructor null const print var sizeof Infinity NaN undefined globalThis through delete THAT DELETE SAVE LOG ERROR WRITE INTO PUSH POP SHIFT UNSHIFT FROM Int Float BEGIN END SET TO typeof instanceof in of type super extends function def this echo export as JSON yield async try catch finally static while if else import from let const null of default caseof switch with for case default elif debugger or and return new is not throw break continue".split(" ").map(a=>
new RegExp(`\\b${a}\\b`)),regexp:/\/(?:\\[ ><bfnrtsSwWdD.+*^$[\]{}|?:\\]|[^><\n\/\\])*?\//,operator:"+ - / ** * %".split(" "),bigInt:/(?:\+|-)?(?:[0-9]+(?:_?[0-9]+)*)n/,number:/(?:\+|-)?(?:[0-9]+(?:_?[0-9]+)*)(?:\.[0-9]+)?/,boolean:["true","false"],"opening parentesis":"(","closing parentesis":")",fat_arrow:"=>",identifier:[{match:/[A-Za-z_$]+[A-Za-z0-9_$]*/},{match:/(?:\u00a9|\u00ae|[\u2000-\u3300]|\ud83c[\ud000-\udfff]|\ud83d[\ud000-\udfff]|\ud83e[\ud000-\udfff])/,value:a=>"emoji_"+a.codePointAt()}],
eval:"@eval","@include":"@include","#include":"#include",import:"@import","@text":"@text",decorator:["@js"],literal:"# @ [ ] { } ( ) ... .. . \\ , ; :: : ?? ?. ? ! != !== == === >= <= > < && & | || += -= *= /= %= **= ++ -- =".split(" ")}),t=a=>e(a[0],{type:"return",value:a[2]}),u=a=>({type:"statement_value",value:a[0],line:a[0].line,col:a[0].col,lineBreak:a[0].lineBreak,offset:a[0].offset}),v=a=>({type:"statement_value",value:a[0],line:a[0].line,col:a[0].col,lineBreak:a[0].lineBreak,offset:a[0].offset});
const n={parse:a=>e(a[0],{value:a[0]+(a[1]?a[1].join(""):"")}),flag:a=>a[0].value},p={float:a=>e(a[0],{value:a[0].value.replace(/_/g,"")}),bigInt:a=>e(a[0],{type:"bigInt",value:a[0].value.replace(/_/g,"")})},x={px:a=>e(a[0],{type:"string",value:a[0].value+"px"}),slice:a=>e(a[0],{type:"string_slice",start:a[4],end:a[9],reversed:a[7]?!0:!1})};Object.join=function(a){return{...this,...a}};h={Lexer:h,ParserRules:[{name:"process$ebnf$1$subexpression$1",symbols:[{literal:";"},"_"]},{name:"process$ebnf$1",
symbols:["process$ebnf$1$subexpression$1"],postprocess:b},{name:"process$ebnf$1",symbols:[],postprocess:function(a){return null}},{name:"process",symbols:["decorated_statements","_","process$ebnf$1"],postprocess:(a,c,d)=>a[0]},{name:"single_include$subexpression$1",symbols:["identifier"]},{name:"single_include$subexpression$1",symbols:["keyword"]},{name:"single_include",symbols:[{literal:"#include"},"_nbsp",{literal:"<"},"single_include$subexpression$1",{literal:">"}],postprocess:a=>{"HTML"==a[3][0].value&&
(r=!0);return{type:"built_in_include",value:a[3][0].value,line:a[0].line,col:a[0].col}}},{name:"single_include",symbols:[{literal:"#include"},"__nbsp","string"],postprocess:a=>({type:"include",value:a[2].value,line:a[0].line,col:a[0].col})},{name:"includes",symbols:["includes","EOL","single_include"],postprocess:(a,c,d)=>a[0].concat(a[2])},{name:"includes",symbols:["single_include"],postprocess:a=>[a[0]]},{name:"group_include$ebnf$1$subexpression$1",symbols:["_","includes"]},{name:"group_include$ebnf$1",
symbols:["group_include$ebnf$1$subexpression$1"],postprocess:b},{name:"group_include$ebnf$1",symbols:[],postprocess:function(a){return null}},{name:"group_include",symbols:["group_include$ebnf$1"],postprocess:a=>a[0]?a[0][1]:[]},{name:"decorated_statements",symbols:["_",h.has("decorator")?{type:"decorator"}:decorator,"group_include","statements"],postprocess:a=>({type:"decorator",line:a[3].line,col:a[3].col,offset:a[3].offset,decorator:a[1].value,includes:a[2],value:a[3]})},{name:"decorated_statements",
symbols:["group_include","statements"],postprocess:a=>({type:"decorator",includes:a[0],value:a[1],line:a[0]?a[0].line:a[1].line,col:a[0]?a[0].col:a[1].col})},{name:"statements$ebnf$1",symbols:[]},{name:"statements$ebnf$1$subexpression$1",symbols:["_","global","EOL"],postprocess:a=>a[1]},{name:"statements$ebnf$1",symbols:["statements$ebnf$1","statements$ebnf$1$subexpression$1"],postprocess:function(a){return a[0].concat([a[1]])}},{name:"statements$ebnf$2",symbols:[]},{name:"statements$ebnf$2$subexpression$1",
symbols:["_","statement","EOL"]},{name:"statements$ebnf$2",symbols:["statements$ebnf$2","statements$ebnf$2$subexpression$1"],postprocess:function(a){return a[0].concat([a[1]])}},{name:"statements$ebnf$3$subexpression$1",symbols:["_","statement"]},{name:"statements$ebnf$3",symbols:["statements$ebnf$3$subexpression$1"],postprocess:b},{name:"statements$ebnf$3",symbols:[],postprocess:function(a){return null}},{name:"statements",symbols:["statements$ebnf$1","statements$ebnf$2","statements$ebnf$3"],postprocess:(a,
c,d)=>{c=[];if(a[0]&&a[0].length){if(!a[1].length&&!a[2])return d;for(let f=0;f<a[0].length;f++)c.push(a[0][f])}if(a[1].length&&!a[2])return d;for(d=0;d<a[1].length;d++)c.push(a[1][d][1]);a[2]&&c.push(a[2][1]);return c}},{name:"statement",symbols:["blocks"],postprocess:b},{name:"statement",symbols:["debugging"],postprocess:b},{name:"statement",symbols:["class_declaration"],postprocess:b},{name:"statement",symbols:[{literal:"debugger"}],postprocess:a=>e(a[0],{type:"debugger"})},{name:"statement",symbols:[{literal:"delete"},
"_nbsp","value"],postprocess:a=>e(a[0],{type:"delete",value:a[2]})},{name:"statement",symbols:["return"],postprocess:b},{name:"statement",symbols:[{literal:"throw"},"__","value"],postprocess:a=>e(a[0],{type:"throw",value:a[2]})},{name:"statement$subexpression$1",symbols:[{literal:"break"}]},{name:"statement$subexpression$1",symbols:[{literal:"continue"}]},{name:"statement",symbols:["statement$subexpression$1"],postprocess:a=>e(a[0][0],{type:"break_continue"})},{name:"statement",symbols:[{literal:"swap"},
"__","value","_",{literal:","},"_","value"],postprocess:a=>e(a[0],{type:"swap",left:a[2],right:a[6]})},{name:"statement",symbols:["var_assign"],postprocess:b},{name:"statement",symbols:["value_reassign"],postprocess:u},{name:"statement",symbols:["value"],postprocess:v},{name:"statement",symbols:[{literal:"namespace"},"__","value"],postprocess:a=>e(a[0],{type:"namespace",value:a[2]})},{name:"blocks",symbols:["if_block"],postprocess:b},{name:"blocks",symbols:["while_block"],postprocess:b},{name:"blocks",
symbols:["for_block"],postprocess:b},{name:"blocks",symbols:["try_catch_finally"],postprocess:b},{name:"blocks",symbols:["switch_multiple"],postprocess:b},{name:"blocks",symbols:["type_declaration"],postprocess:b},{name:"blocks",symbols:["operator_declaration"],postprocess:b},{name:"blocks",symbols:["interface"],postprocess:b},{name:"statements_block$ebnf$1$subexpression$1",symbols:[{literal:";"},"_"]},{name:"statements_block$ebnf$1",symbols:["statements_block$ebnf$1$subexpression$1"],postprocess:b},
{name:"statements_block$ebnf$1",symbols:[],postprocess:function(a){return null}},{name:"statements_block",symbols:["_",{literal:"{"},"statements","_","statements_block$ebnf$1",{literal:"}"}],postprocess:a=>({type:"scope",value:a[2],line:a[2].line,col:a[2].col})},{name:"statements_block$ebnf$2$subexpression$1",symbols:[{literal:";"},"_"]},{name:"statements_block$ebnf$2",symbols:["statements_block$ebnf$2$subexpression$1"],postprocess:b},{name:"statements_block$ebnf$2",symbols:[],postprocess:function(a){return null}},
{name:"statements_block",symbols:["_",{literal:"BEGIN"},"__","statements","_","statements_block$ebnf$2",{literal:"END"}],postprocess:a=>({type:"scope",value:a[3],line:a[3].line,col:a[3].col})},{name:"statements_block",symbols:["_",{literal:":"},"_","statement"],postprocess:a=>({type:"scope",value:[a[3]],line:a[3].line,col:a[3].col})},{name:"statements_block",symbols:["_",{literal:"do"},"__","statement"],postprocess:a=>({type:"scope",value:[a[3]],line:a[3].line,col:a[3].col})},{name:"type_declaration",
symbols:[{literal:"type"},"__","identifier","_","arguments_with_types","statements_block"],postprocess:a=>{if(a[2].value[0].toUpperCase()!=a[2].value[0])throw new SyntaxError("Type name must be capitalized.");if(0==a[4].value.length)throw Error("Type declaration requires at least one argument.");return e(a[0],{type:"type_declaration",identifier:a[2],arguments:a[4],value:a[5],line:a[0].line,col:a[0].col})}},{name:"operator$ebnf$1",symbols:[/[A-Za-z0-9_\/*+-.&|$@!^#~]/]},{name:"operator$ebnf$1",symbols:["operator$ebnf$1",
/[A-Za-z0-9_\/*+-.&|$@!^#~]/],postprocess:function(a){return a[0].concat([a[1]])}},{name:"operator",symbols:[{literal:"#"},"operator$ebnf$1"],postprocess:a=>({type:"operator",value:a[1],line:a[0].line,col:a[0].col})},{name:"operator_declaration",symbols:[{literal:"operator"},"__","operator","_","arguments_with_types","statements_block"],postprocess:a=>{if(2>a[4].value.length&&2<a[4].value.length)throw Error("Operator declaration requires two argument");return e(a[0],{type:"operator_declaration",identifier:a[2],
arguments:a[4],value:a[5],line:a[0].line,col:a[0].col})}},{name:"interface$subexpression$1$ebnf$1",symbols:[{literal:"?"}],postprocess:b},{name:"interface$subexpression$1$ebnf$1",symbols:[],postprocess:function(a){return null}},{name:"interface$subexpression$1",symbols:["key","interface$subexpression$1$ebnf$1","_",{literal:":"},"_","_value_type","_"]},{name:"interface$ebnf$1",symbols:[]},{name:"interface$ebnf$1$subexpression$1$ebnf$1",symbols:[{literal:"?"}],postprocess:b},{name:"interface$ebnf$1$subexpression$1$ebnf$1",
symbols:[],postprocess:function(a){return null}},{name:"interface$ebnf$1$subexpression$1",symbols:[{literal:","},"_","key","interface$ebnf$1$subexpression$1$ebnf$1","_",{literal:":"},"_","_value_type","_"],postprocess:a=>a.slice(2)},{name:"interface$ebnf$1",symbols:["interface$ebnf$1","interface$ebnf$1$subexpression$1"],postprocess:function(a){return a[0].concat([a[1]])}},{name:"interface$ebnf$2$subexpression$1",symbols:[{literal:","},"_"]},{name:"interface$ebnf$2",symbols:["interface$ebnf$2$subexpression$1"],
postprocess:b},{name:"interface$ebnf$2",symbols:[],postprocess:function(a){return null}},{name:"interface",symbols:[{literal:"interface"},"__","identifier","_",{literal:"{"},"_","interface$subexpression$1","interface$ebnf$1","interface$ebnf$2",{literal:"}"}],postprocess:a=>{if(a[2].value[0].toUpperCase()!=a[2].value[0])throw new SyntaxError("Interface name must be capitalized.");if(0==a[6].length)throw Error("Interface declaration requires at least one argument.");let c=[a[6],...a[7]],d={};for(let f in c){for(let g in c[f][5].value){let k=
c[f][5].value[g];if(k[0].toUpperCase()!=k[0])throw new SyntaxError("Interface key must be capitalized.");}if(d[c[f][0].value])throw new SyntaxError(`Interface key must be unique. "${c[f][0].value}" is already defined`);d[c[f][0].value]={nullable:c[f][1]?!0:!1,value:c[f][5].value,is_array:c[f][5].is_array}}return{type:"interface",identifier:a[2].value,value:d,line:a[0].line,col:a[0].col}}},{name:"global",symbols:[{literal:"@"},{literal:"global"},"__","identifier"],postprocess:a=>({type:"global",value:a[3]})},
{name:"identifier",symbols:[h.has("identifier")?{type:"identifier"}:identifier],postprocess:(a,c,d)=>"null"==a[0].type||"Infinity this globalThis NaN Boolean Object Array String Number JSON".split(" ").includes(a[0].value)?d:a[0]},{name:"identifier",symbols:["allowed_keywords"],postprocess:b},{name:"allowed_keywords",symbols:[{literal:"Infinity"}],postprocess:b},{name:"allowed_keywords",symbols:[{literal:"this"}],postprocess:b},{name:"allowed_keywords",symbols:[{literal:"globalThis"}],postprocess:b},
{name:"allowed_keywords",symbols:[{literal:"NaN"}],postprocess:b},{name:"allowed_keywords",symbols:[{literal:"Boolean"}],postprocess:b},{name:"allowed_keywords",symbols:[{literal:"Object"}],postprocess:b},{name:"allowed_keywords",symbols:[{literal:"Array"}],postprocess:b},{name:"allowed_keywords",symbols:[{literal:"String"}],postprocess:b},{name:"allowed_keywords",symbols:[{literal:"Number"}],postprocess:b},{name:"allowed_keywords",symbols:[{literal:"JSON"}],postprocess:b},{name:"allowed_keywords",
symbols:[{literal:"Float"}],postprocess:b},{name:"allowed_keywords",symbols:[{literal:"Int"}],postprocess:b},{name:"allowed_keywords",symbols:[{literal:"undefined"}],postprocess:a=>e(a[0],{type:"keyword",value:"void(0)"})},{name:"convert",symbols:["prefixExp","__",{literal:"as"},"__","convert_type"],postprocess:(a,c,d)=>({type:"convert",value:a[0],convert_type:a[4],line:a[0].line,col:a[0].col})},{name:"convert_type$subexpression$1",symbols:[{literal:"Function"}]},{name:"convert_type$subexpression$1",
symbols:[{literal:"JSON"}]},{name:"convert_type$subexpression$1",symbols:[{literal:"String"}]},{name:"convert_type$subexpression$1",symbols:[{literal:"Number"}]},{name:"convert_type$subexpression$1",symbols:[{literal:"Boolean"}]},{name:"convert_type$subexpression$1",symbols:[{literal:"Object"}]},{name:"convert_type$subexpression$1",symbols:[{literal:"Float"}]},{name:"convert_type$subexpression$1",symbols:[{literal:"Int"}]},{name:"convert_type$subexpression$1",symbols:[{literal:"Array"}]},{name:"convert_type",
symbols:["convert_type$subexpression$1"],postprocess:a=>a[0][0]},{name:"pair$ebnf$1$subexpression$1",symbols:[{literal:"async"},"__"]},{name:"pair$ebnf$1",symbols:["pair$ebnf$1$subexpression$1"],postprocess:b},{name:"pair$ebnf$1",symbols:[],postprocess:function(a){return null}},{name:"pair",symbols:["pair$ebnf$1","key","_","arguments_with_types","statements_block"],postprocess:a=>[a[1],{type:"es6_key_value",arguments:a[3],key:a[1],value:a[4],async:a[0]?!0:!1}]},{name:"pair",symbols:["key","_",{literal:":"},
"_","value"],postprocess:a=>[a[0],a[4]]},{name:"pair",symbols:["key"],postprocess:a=>[a[0],a[0]]},{name:"key",symbols:["string"],postprocess:b},{name:"key",symbols:["identifier"],postprocess:b},{name:"key",symbols:[h.has("keyword")?{type:"keyword"}:keyword],postprocess:b},{name:"string_concat",symbols:[h.has("string")?{type:"string"}:x],postprocess:b},{name:"regexp_flags",symbols:[/[gmi]/],postprocess:n.flag},{name:"myNull",symbols:[{literal:"null"}],postprocess:function(a){return e(a[0],{type:"null",
value:null})}},{name:"boolean$subexpression$1",symbols:[h.has("boolean")?{type:"boolean"}:q]},{name:"boolean",symbols:["boolean$subexpression$1"],postprocess:q},{name:"boolean",symbols:[{literal:"defined"},"_nbsp","identifier"],postprocess:a=>({type:"defined",value:a[2],line:a[0].line,col:a[0].col})},{name:"boolean",symbols:[{literal:"defined"},"_nbsp",{literal:"("},"_","identifier","_",{literal:")"}],postprocess:a=>({type:"defined",value:a[4],line:a[0].line,col:a[0].col})},{name:"string",symbols:["string_concat"],
postprocess:b},{name:"string",symbols:[{literal:"typeof"},"_",{literal:"("},"_","value","_",{literal:")"}],postprocess:a=>({type:"typeof",value:a[4],line:a[0].line,col:a[0].col})},{name:"bigInt",symbols:[h.has("bigInt")?{type:"bigInt"}:bigInt],postprocess:p.bigInt},{name:"number",symbols:[h.has("number")?{type:"number"}:p],postprocess:p.float},{name:"number",symbols:[{literal:"sizeof"},"_",{literal:"("},"_","value","_",{literal:")"}],postprocess:a=>({type:"sizeof",value:a[4],line:a[0].line,col:a[0].col})},
{name:"object",symbols:[{literal:"{"},"_",{literal:"}"}],postprocess:a=>{a[0].value={};a[0].type="object";delete a[0].text;return a[0]}},{name:"object$ebnf$1",symbols:[]},{name:"object$ebnf$1$subexpression$1",symbols:["_",{literal:","},"_","pair"]},{name:"object$ebnf$1",symbols:["object$ebnf$1","object$ebnf$1$subexpression$1"],postprocess:function(a){return a[0].concat([a[1]])}},{name:"object$ebnf$2$subexpression$1",symbols:["_",{literal:","}]},{name:"object$ebnf$2",symbols:["object$ebnf$2$subexpression$1"],
postprocess:b},{name:"object$ebnf$2",symbols:[],postprocess:function(a){return null}},{name:"object",symbols:[{literal:"{"},"_","pair","object$ebnf$1","object$ebnf$2","_",{literal:"}"}],postprocess:function(a){let c={};var d=a[2];d[0]?c[d[0]]=d[1]:c[d.text]=d;for(let g in a[3]){d=a[3][g][3];var f=c;d[0]?f[d[0]]=d[1]:f[d.text]=d}return e(a[0],{type:"object",value:c})}},{name:"regexp$ebnf$1",symbols:[]},{name:"regexp$ebnf$1$subexpression$1",symbols:["regexp_flags"]},{name:"regexp$ebnf$1",symbols:["regexp$ebnf$1",
"regexp$ebnf$1$subexpression$1"],postprocess:function(a){return a[0].concat([a[1]])}},{name:"regexp",symbols:[h.has("regexp")?{type:"regexp"}:n,"regexp$ebnf$1"],postprocess:n.parse},{name:"_base",symbols:["base"],postprocess:b},{name:"_base",symbols:["regexp"],postprocess:b},{name:"Var",symbols:["_base","_nbsp",{literal:"["},"_",{literal:"]"}],postprocess:a=>({type:"item_retraction_last",from:a[0],line:a[0].line,col:a[0].col})},{name:"Var$subexpression$1",symbols:["_","value"]},{name:"Var$ebnf$1$subexpression$1",
symbols:["_","value"]},{name:"Var$ebnf$1",symbols:["Var$ebnf$1$subexpression$1"],postprocess:b},{name:"Var$ebnf$1",symbols:[],postprocess:function(a){return null}},{name:"Var$ebnf$2$subexpression$1",symbols:["_",{literal:":"},"_","value"]},{name:"Var$ebnf$2",symbols:["Var$ebnf$2$subexpression$1"],postprocess:b},{name:"Var$ebnf$2",symbols:[],postprocess:function(a){return null}},{name:"Var",symbols:["_base","_",{literal:"["},"Var$subexpression$1","_",{literal:":"},"Var$ebnf$1","Var$ebnf$2","_",{literal:"]"}],
postprocess:(a,c,d)=>"debugging"==a[0].type?d:{type:"array_slice",start:a[3][1],end:null!==a[6]?a[6][1]:null,step:a[7]?a[7][3]:null,value:a[0]}},{name:"Var",symbols:["_base","_nbsp",{literal:"["},"_","value","_",{literal:"]"}],postprocess:a=>({type:"item_retraction",from:a[0],value:a[4],line:a[0].line,col:a[0].col})},{name:"Var$subexpression$2",symbols:[h.has("keyword")?{type:"keyword"}:keyword]},{name:"Var$subexpression$2",symbols:["identifier"]},{name:"Var",symbols:["_base","_",{literal:"."},"_",
"Var$subexpression$2"],postprocess:(a,c,d)=>"annonymous_function"==a[0].type?d:{type:"dot_retraction_v2",from:a[0],value:a[4][0],line:a[0].line,col:a[0].col}},{name:"Var$subexpression$3",symbols:[h.has("keyword")?{type:"keyword"}:keyword]},{name:"Var$subexpression$3",symbols:["identifier"]},{name:"Var",symbols:[{literal:"::"},"Var$subexpression$3"],postprocess:(a,c,d)=>({type:"namespace_retraction",retraction_type:"dot",value:a[1][0],line:a[1][0].line,col:a[1][0].col})},{name:"Var",symbols:[{literal:"::"},
{literal:"["},"_","value","_",{literal:"]"}],postprocess:a=>({type:"namespace_retraction",retraction_type:"item_retraction",value:a[3],line:a[0].line,col:a[0].col})},{name:"Var",symbols:[{literal:"::"},{literal:"["},"_",{literal:"]"}],postprocess:a=>({type:"namespace_retraction",retraction_type:"item_retraction_last",line:a[0].line,col:a[0].col})},{name:"Var",symbols:["function_call"],postprocess:b},{name:"Var",symbols:["identifier"],postprocess:b},{name:"switch$ebnf$1",symbols:[]},{name:"switch$ebnf$1$subexpression$1",
symbols:["_","case_single_valued"]},{name:"switch$ebnf$1",symbols:["switch$ebnf$1","switch$ebnf$1$subexpression$1"],postprocess:function(a){return a[0].concat([a[1]])}},{name:"switch",symbols:[{literal:"caseof"},"_","value","_",{literal:"{"},"switch$ebnf$1","_",{literal:"}"}],postprocess:a=>e(a[0],{type:"switch*",value:a[2],cases:a[5]?a[5].map(c=>c[1]):[]})},{name:"case_single_valued$ebnf$1$subexpression$1",symbols:["value","EOL"]},{name:"case_single_valued$ebnf$1",symbols:["case_single_valued$ebnf$1$subexpression$1"],
postprocess:b},{name:"case_single_valued$ebnf$1",symbols:[],postprocess:function(a){return null}},{name:"case_single_valued",symbols:[{literal:"|"},"_","value","_",{literal:":"},"_","case_single_valued$ebnf$1"],postprocess:a=>e(a[0],{type:"case_with_break",value:a[2],statements:a[6]?a[6][0]:[]})},{name:"case_single_valued",symbols:[{literal:"&"},"_","value","_",{literal:":"},"_"],postprocess:a=>e(a[0],{type:"case_singular",value:a[2],statements:a[6]?a[6][0]:[]})},{name:"case_single_valued$ebnf$2$subexpression$1",
symbols:["value","EOL"]},{name:"case_single_valued$ebnf$2",symbols:["case_single_valued$ebnf$2$subexpression$1"],postprocess:b},{name:"case_single_valued$ebnf$2",symbols:[],postprocess:function(a){return null}},{name:"case_single_valued",symbols:[{literal:"default"},"_",{literal:":"},"_","case_single_valued$ebnf$2"],postprocess:a=>e(a[0],{type:"case_default_singular",value:a[4]?a[4][0]:[null]})},{name:"switch_multiple$ebnf$1",symbols:[]},{name:"switch_multiple$ebnf$1$subexpression$1",symbols:["_",
"case_multiline"]},{name:"switch_multiple$ebnf$1",symbols:["switch_multiple$ebnf$1","switch_multiple$ebnf$1$subexpression$1"],postprocess:function(a){return a[0].concat([a[1]])}},{name:"switch_multiple$ebnf$2$subexpression$1",symbols:["_","case_default"]},{name:"switch_multiple$ebnf$2",symbols:["switch_multiple$ebnf$2$subexpression$1"],postprocess:b},{name:"switch_multiple$ebnf$2",symbols:[],postprocess:function(a){return null}},{name:"switch_multiple",symbols:[{literal:"switch"},"__","value","_",
{literal:"{"},"switch_multiple$ebnf$1","switch_multiple$ebnf$2","_",{literal:"}"}],postprocess:a=>e(a[0],{type:"switch",value:a[2],cases:a[5]?a[5].map(c=>c[1]):[],default:a[6]?a[6][1]:null})},{name:"case_multiline$ebnf$1$subexpression$1",symbols:["_",{literal:";"}]},{name:"case_multiline$ebnf$1",symbols:["case_multiline$ebnf$1$subexpression$1"],postprocess:b},{name:"case_multiline$ebnf$1",symbols:[],postprocess:function(a){return null}},{name:"case_multiline",symbols:[{literal:"case"},"__","value",
"_",{literal:":"},"statements","case_multiline$ebnf$1"],postprocess:a=>e(a[0],{type:"case",value:a[2],statements:a[5]})},{name:"case_default$ebnf$1$subexpression$1",symbols:["_",{literal:";"}]},{name:"case_default$ebnf$1",symbols:["case_default$ebnf$1$subexpression$1"],postprocess:b},{name:"case_default$ebnf$1",symbols:[],postprocess:function(a){return null}},{name:"case_default",symbols:[{literal:"default"},"_",{literal:":"},"statements","case_default$ebnf$1"],postprocess:a=>e(a[0],{type:"case_default",
value:a[3]})},{name:"class_declaration$ebnf$1",symbols:[]},{name:"class_declaration$ebnf$1$subexpression$1",symbols:["_","es6_key_value"],postprocess:a=>a[1]},{name:"class_declaration$ebnf$1",symbols:["class_declaration$ebnf$1","class_declaration$ebnf$1$subexpression$1"],postprocess:function(a){return a[0].concat([a[1]])}},{name:"class_declaration",symbols:[{literal:"class"},"_","identifier","_",{literal:"{"},"_","construct","class_declaration$ebnf$1","_",{literal:"}"}],postprocess:a=>e(a[0],{type:"class_declaration",
identifier:a[2],construct:a[6],value:a[7]})},{name:"construct",symbols:[{literal:"constructor"},"_","arguments_with_types","statements_block"],postprocess:a=>({type:"construct",arguments:a[2],value:a[3]})},{name:"es6_key_value",symbols:["identifier","_","arguments_with_types","statements_block"],postprocess:a=>({type:"es6_key_value",key:a[0],arguments:a[2],value:a[3]})},{name:"if_block",symbols:[{literal:"if"},"statement_condition","statements_block"],postprocess:a=>e(a[0],{type:"if",condition:a[1],
value:a[2]})},{name:"if_block",symbols:[{literal:"unless"},"statement_condition","statements_block"],postprocess:a=>e(a[0],{type:"if",condition:a[1],value:a[2],unless:!0})},{name:"if_block",symbols:["if_block","_","else_block"],postprocess:a=>({type:"if_else",if:a[0],else:a[2],offset:a[0].offset,lineBreaks:a[0].lineBreaks,line:a[0].line,col:a[0].col})},{name:"else_block",symbols:[{literal:"else"},"__","statement"],postprocess:(a,c,d)=>"statement_value"==a[2].type&&"value"==a[2].value.type&&"object"==
a[2].value.value.type?d:e(a[0],{type:"else",value:[a[2]]})},{name:"else_block",symbols:[{literal:"else"},"statements_block"],postprocess:a=>e(a[0],{type:"else",value:a[1]})},{name:"ternary$ebnf$1$subexpression$1",symbols:["_",{literal:":"},"_","value"]},{name:"ternary$ebnf$1",symbols:["ternary$ebnf$1$subexpression$1"],postprocess:b},{name:"ternary$ebnf$1",symbols:[],postprocess:function(a){return null}},{name:"ternary",symbols:["condition","_",{literal:"?"},"_","value","ternary$ebnf$1"],postprocess:a=>
({type:"ternary",left:a[4],right:a[5]?a[5][3]:null,value:a[0],line:a[0].line,lineBreaks:a[0].lineBreaks,offset:a[0].offset,col:a[0].col})},{name:"ternary$ebnf$2$subexpression$1",symbols:["_",{literal:"else"},"_","value"]},{name:"ternary$ebnf$2",symbols:["ternary$ebnf$2$subexpression$1"],postprocess:b},{name:"ternary$ebnf$2",symbols:[],postprocess:function(a){return null}},{name:"ternary",symbols:["value","__nbsp",{literal:"if"},"_","condition","ternary$ebnf$2"],postprocess:a=>({type:"ternary",left:a[0],
right:a[5]?a[5][3]:null,value:a[4],line:a[0].line,lineBreaks:a[0].lineBreaks,offset:a[0].offset,col:a[0].col})},{name:"try_catch_finally$ebnf$1$subexpression$1",symbols:["_","finally"]},{name:"try_catch_finally$ebnf$1",symbols:["try_catch_finally$ebnf$1$subexpression$1"],postprocess:b},{name:"try_catch_finally$ebnf$1",symbols:[],postprocess:function(a){return null}},{name:"try_catch_finally",symbols:["try_catch","try_catch_finally$ebnf$1"],postprocess:a=>({type:"try_catch_finally",value:a[0],finally:a[1]?
a[1][1]:null,line:a[0].line,col:a[0].col})},{name:"try_catch$ebnf$1$subexpression$1",symbols:["_","catch"]},{name:"try_catch$ebnf$1",symbols:["try_catch$ebnf$1$subexpression$1"],postprocess:b},{name:"try_catch$ebnf$1",symbols:[],postprocess:function(a){return null}},{name:"try_catch",symbols:["try","try_catch$ebnf$1"],postprocess:a=>({type:"try_catch",value:a[0],catch:a[1]?a[1][1]:null,line:a[0].line,col:a[0].col})},{name:"try",symbols:[{literal:"try"},"statements_block"],postprocess:a=>({type:"try",
value:a[1],line:a[0].line,col:a[0].col})},{name:"catch",symbols:[{literal:"catch"},"__","identifier","statements_block"],postprocess:a=>({type:"catch",value:a[3],identifier:a[2].value,line:a[0].line,col:a[0].col})},{name:"catch",symbols:[{literal:"catch"},"_",{literal:"("},"_","identifier","_",{literal:")"},"statements_block"],postprocess:a=>({type:"catch",value:a[7],identifier:a[4].value,line:a[0].line,col:a[0].col})},{name:"catch",symbols:[{literal:"catch"},"statements_block"],postprocess:a=>({type:"catch",
value:a[1],identifier:"err",line:a[0].line,col:a[0].col})},{name:"finally",symbols:[{literal:"finally"},"statements_block"],postprocess:a=>({type:"finally",value:a[1],line:a[0].line,col:a[0].col})},{name:"left_assign",symbols:["Var"],postprocess:b},{name:"left_assign",symbols:["function_call"],postprocess:b},{name:"value_reassign$subexpression$1",symbols:["value"]},{name:"value_reassign",symbols:["left_assign","_",{literal:"="},"_","value_reassign$subexpression$1"],postprocess:a=>({type:"var_reassign",
identifier:a[0],line:a[0].line,col:a[0].col,value:a[4][0],offset:a[0].offset})},{name:"value_reassign$subexpression$2",symbols:["switch"]},{name:"value_reassign$subexpression$2",symbols:["value"]},{name:"value_reassign",symbols:[{literal:"SET"},"_","value","_",{literal:"TO"},"_","value_reassign$subexpression$2"],postprocess:a=>({type:"var_reassign",identifier:a[2],line:a[0].line,col:a[0].col,value:a[6][0],offset:a[0].offset})},{name:"value_reassign",symbols:["value_addition"],postprocess:b},{name:"var_assign",
symbols:["assign_type","var_assign_list"],postprocess:a=>{let c=a[0]?a[0]:a[1];return{type:"var_assign",use_let:a[0]&&"const"!=a[0].value?!0:!1,use_const:a[0]&&"const"==a[0].value?!0:!1,type_text:a[0]?a[0]:"",line:c.line,col:c.col,value:a[1],offset:c.offset}}},{name:"var_assign$subexpression$1",symbols:["switch"]},{name:"var_assign$subexpression$1",symbols:["value"]},{name:"var_assign",symbols:[{literal:"ASSIGN"},"_","var_assign$subexpression$1","_",{literal:"TO"},"_","identifier"],postprocess:a=>
({type:"var_assign",use_let:!0,identifier:a[6],line:a[0].line,col:a[0].col,value:{type:"var_assign_group",identifier:a[6],value:[a[2][0]],line:a[2][0].line,col:a[2][0].col},offset:a[0].offset})},{name:"assign_type$subexpression$1",symbols:[{literal:"let"},"__"]},{name:"assign_type$subexpression$1",symbols:[{literal:"const"},"__"]},{name:"assign_type$subexpression$1",symbols:[{literal:"\\"}]},{name:"assign_type",symbols:["assign_type$subexpression$1"],postprocess:a=>a[0][0].value},{name:"var_assign_list$ebnf$1",
symbols:[]},{name:"var_assign_list$ebnf$1$subexpression$1",symbols:["_",{literal:","},"_","var_reassign"],postprocess:a=>a[3]},{name:"var_assign_list$ebnf$1",symbols:["var_assign_list$ebnf$1","var_assign_list$ebnf$1$subexpression$1"],postprocess:function(a){return a[0].concat([a[1]])}},{name:"var_assign_list",symbols:["var_reassign","var_assign_list$ebnf$1"],postprocess:a=>({type:"var_assign_group",line:a[0].line,col:a[0].col,value:a[1]?[a[0],...a[1]]:[a[0]],offset:a[0].offset})},{name:"var_reassign",
symbols:["identifier","_",{literal:"="},"_","value"],postprocess:a=>({type:"var_reassign",identifier:a[0],line:a[0].line,col:a[0].col,value:a[4],offset:a[0].offset})},{name:"var_reassign",symbols:["identifier"],postprocess:a=>({type:"identifier",value:a[0],line:a[0].line,col:a[0].col})},{name:"var_reassign$subexpression$1",symbols:["switch"]},{name:"var_reassign$subexpression$1",symbols:["value"]},{name:"var_reassign",symbols:[{literal:"SET"},"_","identifier","_",{literal:"TO"},"_","var_reassign$subexpression$1"],
postprocess:a=>({type:"var_reassign",identifier:a[0],line:a[0].line,col:a[0].col,value:a[4][0],offset:a[0].offset})},{name:"value_addition$subexpression$1",symbols:[{literal:"+"},{literal:"="}]},{name:"value_addition$subexpression$1",symbols:[{literal:"-"},{literal:"="}]},{name:"value_addition$subexpression$1",symbols:[{literal:"*"},{literal:"="}]},{name:"value_addition$subexpression$1",symbols:[{literal:"/"},{literal:"="}]},{name:"value_addition",symbols:["prefixExp","_nbsp","value_addition$subexpression$1",
"_","sum"],postprocess:(a,c,d)=>{if("string"==a[0].type||"number"==a[0].type||"boolean"==a[0].type||"null"==a[0].type)throw Error(`Unexpected assignment at line ${a[2][0].line}, col ${a[2][0].col}`);return{type:"expression_short_equation",value:[a[0],e(a[2][0],{value:a[2][0].value}),a[4]]}}},{name:"while_block",symbols:[{literal:"while"},"statement_condition","statements_block"],postprocess:a=>e(a[0],{type:"while",condition:a[1],value:a[2]})},{name:"for_block$subexpression$1",symbols:[{literal:"in"}]},
{name:"for_block$subexpression$1",symbols:[{literal:"of"}]},{name:"for_block",symbols:[{literal:"for"},"__","identifier","__","for_block$subexpression$1","__","value","statements_block"],postprocess:a=>e(a[0],{type:"for_"+a[4][0],condition:a[1],identifier:a[2],iterable:a[6],value:a[7]})},{name:"for_block$subexpression$2",symbols:[{literal:"in"}]},{name:"for_block$subexpression$2",symbols:[{literal:"of"}]},{name:"for_block",symbols:[{literal:"for"},"_",{literal:"("},"_","identifier","__","for_block$subexpression$2",
"__","value","_",{literal:")"},"statements_block"],postprocess:a=>e(a[0],{type:"for_"+a[6][0],identifier:a[4],iterable:a[8],value:a[11]})},{name:"for_block$subexpression$3",symbols:[{literal:"through"}]},{name:"for_block$subexpression$3",symbols:[{literal:"till"}]},{name:"for_block",symbols:[{literal:"for"},"__","identifier","__",{literal:"from"},"__","value","_","for_block$subexpression$3","_","value","statements_block"],postprocess:a=>e(a[0],{type:"for_loop",identifier:a[2],from:a[6],through:a[10],
include:"till"==a[8][0].text?!1:!0,value:a[11]})},{name:"for_block$subexpression$4",symbols:[{literal:"through"}]},{name:"for_block$subexpression$4",symbols:[{literal:"till"}]},{name:"for_block",symbols:[{literal:"for"},"_",{literal:"("},"_","identifier","__",{literal:"from"},"__","value","_","for_block$subexpression$4","_","value","_",{literal:")"},"statements_block"],postprocess:a=>e(a[0],{type:"for_loop",identifier:a[4],from:a[8],through:a[12],include:"till"==a[10][0].text?!1:!0,value:a[15]})},
{name:"for_loop_changes",symbols:["value_reassign"],postprocess:u},{name:"for_loop_changes",symbols:["value"],postprocess:v},{name:"annonymous_function$ebnf$1$subexpression$1",symbols:[{literal:"async"},"__"]},{name:"annonymous_function$ebnf$1",symbols:["annonymous_function$ebnf$1$subexpression$1"],postprocess:b},{name:"annonymous_function$ebnf$1",symbols:[],postprocess:function(a){return null}},{name:"annonymous_function$ebnf$2$subexpression$1",symbols:["__","identifier"]},{name:"annonymous_function$ebnf$2",
symbols:["annonymous_function$ebnf$2$subexpression$1"],postprocess:b},{name:"annonymous_function$ebnf$2",symbols:[],postprocess:function(a){return null}},{name:"annonymous_function",symbols:"annonymous_function$ebnf$1 value_type annonymous_function$ebnf$2 _ arguments_with_types statements_block".split(" "),postprocess:a=>({type:"annonymous_function",identifier:a[2]?a[2][1]:"",arguments:a[4],value:a[5],declarator:a[1],async:a[0]?!0:!1,line:a[1].line,col:a[1].col})},{name:"annonymous_function$ebnf$3$subexpression$1",
symbols:[{literal:"async"},"__"]},{name:"annonymous_function$ebnf$3",symbols:["annonymous_function$ebnf$3$subexpression$1"],postprocess:b},{name:"annonymous_function$ebnf$3",symbols:[],postprocess:function(a){return null}},{name:"annonymous_function$ebnf$4$subexpression$1",symbols:["__","identifier"]},{name:"annonymous_function$ebnf$4",symbols:["annonymous_function$ebnf$4$subexpression$1"],postprocess:b},{name:"annonymous_function$ebnf$4",symbols:[],postprocess:function(a){return null}},{name:"annonymous_function",
symbols:["annonymous_function$ebnf$3","value_type","annonymous_function$ebnf$4","statements_block"],postprocess:a=>({type:"annonymous_function",identifier:a[2]?a[2][1]:"",arguments:[],value:a[3],result:"iife",async:a[0]?!0:!1,line:a[1].line,col:a[1].col})},{name:"value_type",symbols:["_value_type"],postprocess:b},{name:"value_type$subexpression$1",symbols:[{literal:"void"}]},{name:"value_type$subexpression$1",symbols:[{literal:"def"}]},{name:"value_type$subexpression$1",symbols:[{literal:"function"}]},
{name:"value_type",symbols:["value_type$subexpression$1"],postprocess:a=>({type:"value_type",value:[a[0][0].value],is_array:[!1],line:a[0][0].line,col:a[0][0].col})},{name:"_value_type$subexpression$1",symbols:["identifier"]},{name:"_value_type$ebnf$1$subexpression$1",symbols:["_nbsp",{literal:"["},"_",{literal:"]"}]},{name:"_value_type$ebnf$1",symbols:["_value_type$ebnf$1$subexpression$1"],postprocess:b},{name:"_value_type$ebnf$1",symbols:[],postprocess:function(a){return null}},{name:"_value_type",
symbols:["_value_type$subexpression$1","_value_type$ebnf$1"],postprocess:a=>({type:"value_type",value:[a[0][0].value],is_array:[null!==a[1]],line:a[0][0].line,col:a[0][0].col})},{name:"_value_type",symbols:["value_type","_nbsp",{literal:"|"},"_","value_type"],postprocess:a=>({type:"value_type",value:a[0].value.concat(a[4].value),is_array:a[0].is_array.concat(a[4].is_array),line:a[0].line,col:a[0].col})},{name:"return",symbols:[{literal:"return"},"__nbsp","value"],postprocess:t},{name:"return",symbols:[{literal:"return"}],
postprocess:a=>e(a[0],{type:"return",value:void 0})},{name:"return",symbols:[{literal:"=>"},"_nbsp","value"],postprocess:t},{name:"function_call",symbols:["_base","_nbsp","arguments"],postprocess:(a,c,d)=>"annonymous_function"==a[0].type?d:{type:"function_call",value:a[0],arguments:a[2]}},{name:"function_call",symbols:[{literal:"::"},"arguments"],postprocess:(a,c,d)=>({type:"namespace_retraction",retraction_type:"function_call",arguments:a[1]})},{name:"arguments",symbols:[{literal:"("},"_",{literal:")"}],
postprocess:a=>e(a[0],{type:"arguments",value:[]})},{name:"arguments$ebnf$1",symbols:[]},{name:"arguments$ebnf$1$subexpression$1",symbols:["_",{literal:","},"_","value"]},{name:"arguments$ebnf$1",symbols:["arguments$ebnf$1","arguments$ebnf$1$subexpression$1"],postprocess:function(a){return a[0].concat([a[1]])}},{name:"arguments$ebnf$2$subexpression$1",symbols:["_",{literal:","}]},{name:"arguments$ebnf$2",symbols:["arguments$ebnf$2$subexpression$1"],postprocess:b},{name:"arguments$ebnf$2",symbols:[],
postprocess:function(a){return null}},{name:"arguments",symbols:[{literal:"("},"_","value","arguments$ebnf$1","arguments$ebnf$2","_",{literal:")"}],postprocess:a=>{let c=[a[2]];for(let d in a[3])c.push(a[3][d][3]);delete a[0].text;return Object.assign(a[0],{type:"arguments",value:c})}},{name:"arguments_with_types",symbols:[{literal:"("},"_",{literal:")"}],postprocess:a=>e(a[0],{type:"arguments_with_types",value:[],types:[]})},{name:"arguments_with_types$ebnf$1",symbols:[]},{name:"arguments_with_types$ebnf$1$subexpression$1",
symbols:["_",{literal:","},"_","argument_identifier_and_value"]},{name:"arguments_with_types$ebnf$1",symbols:["arguments_with_types$ebnf$1","arguments_with_types$ebnf$1$subexpression$1"],postprocess:function(a){return a[0].concat([a[1]])}},{name:"arguments_with_types$ebnf$2$subexpression$1",symbols:["_",{literal:","}]},{name:"arguments_with_types$ebnf$2",symbols:["arguments_with_types$ebnf$2$subexpression$1"],postprocess:b},{name:"arguments_with_types$ebnf$2",symbols:[],postprocess:function(a){return null}},
{name:"arguments_with_types",symbols:[{literal:"("},"_","argument_identifier_and_value","arguments_with_types$ebnf$1","arguments_with_types$ebnf$2","_",{literal:")"}],postprocess:a=>{let c=[a[2].identifier],d=[],f=a[2].argument_type,g=[];for(var k=0;f&&k<f.value.length;k++)g.push([f.value[k],f.is_array[k]]);0===g.length&&g.push(["none",!1]);d.push(g);k=[a[2].can_be_null?!0:!1];let w=[a[2].value];for(let l in a[3]){g=[];f=a[3][l][3].argument_type;c.push(a[3][l][3].identifier);for(let m=0;f&&m<f.value.length;m++)g.push([f.value[m],
f.is_array[m]]);0===g.length&&g.push(["none",!1]);d.push(g);w.push(a[3][l][3].value);k.push(a[3][l][3].can_be_null?!0:!1)}a[0].value="arguments_with_types";return e(a[0],{type:"arguments_with_types",identifiers:c,cancelables:k,types:d,values:w})}},{name:"argument_identifier_and_value$ebnf$1$subexpression$1",symbols:["_value_type","__"]},{name:"argument_identifier_and_value$ebnf$1",symbols:["argument_identifier_and_value$ebnf$1$subexpression$1"],postprocess:b},{name:"argument_identifier_and_value$ebnf$1",
symbols:[],postprocess:function(a){return null}},{name:"argument_identifier_and_value$ebnf$2$subexpression$1",symbols:["_",{literal:"="},"_","value"]},{name:"argument_identifier_and_value$ebnf$2",symbols:["argument_identifier_and_value$ebnf$2$subexpression$1"],postprocess:b},{name:"argument_identifier_and_value$ebnf$2",symbols:[],postprocess:function(a){return null}},{name:"argument_identifier_and_value",symbols:["argument_identifier_and_value$ebnf$1","identifier","argument_identifier_and_value$ebnf$2"],
postprocess:a=>({type:"argument_identifier_and_value",argument_type:a[0]?a[0][0]:null,can_be_null:!1,identifier:a[1].value,value:a[2]?a[2][3]:void 0})},{name:"argument_type",symbols:["_value_type","__"],postprocess:a=>a[0]},{name:"comparision_operators",symbols:[{literal:"is"},"_",{literal:"not"},"__"],postprocess:a=>e(a[0],{type:"comparision_operator",value:"!=="})},{name:"comparision_operators",symbols:[{literal:"is"},"__"],postprocess:a=>e(a[0],{type:"comparision_operator",value:"==="})},{name:"comparision_operators",
symbols:[{literal:"==="},"_"],postprocess:a=>e(a[0],{type:"comparision_operator",value:"==="})},{name:"comparision_operators",symbols:[{literal:"!=="},"_"],postprocess:a=>e(a[0],{type:"comparision_operator",value:"!=="})},{name:"comparision_operators",symbols:[{literal:"=="},"_"],postprocess:a=>e(a[0],{type:"comparision_operator",value:"=="})},{name:"comparision_operators",symbols:[{literal:"!="},"_"],postprocess:a=>e(a[0],{type:"comparision_operator",value:"!="})},{name:"comparision_operators",symbols:[{literal:">="},
"_"],postprocess:a=>e(a[0],{type:"comparision_operator",value:">="})},{name:"comparision_operators",symbols:[{literal:"<="},"_"],postprocess:a=>e(a[0],{type:"comparision_operator",value:"<="})},{name:"comparision_operators",symbols:[{literal:"<"},"_"],postprocess:a=>e(a[0],{type:"comparision_operator",value:"<"})},{name:"comparision_operators",symbols:[{literal:">"},"_"],postprocess:a=>e(a[0],{type:"comparision_operator",value:">"})},{name:"condition$subexpression$1",symbols:[{literal:"and"}]},{name:"condition$subexpression$1",
symbols:[{literal:"or"}]},{name:"condition$subexpression$1",symbols:[{literal:"&&"}]},{name:"condition$subexpression$1",symbols:[{literal:"||"}]},{name:"condition",symbols:["condition","__","condition$subexpression$1","__","_value"],postprocess:a=>({type:"condition_group",value:[a[0],a[4]],separator:" "+a[2][0]+" ",line:a[0].line,lineBreaks:a[0].lineBreaks,offset:a[0].offset,col:a[0].col})},{name:"condition",symbols:["condition","_","comparision_operators","_value"],postprocess:a=>({type:"value",
left:a[0],right:a[3],value:a[2].value,line:a[0].line,lineBreaks:a[0].lineBreaks,offset:a[0].offset,col:a[0].col})},{name:"condition",symbols:["condition","_","comparision_operators","arguments"],postprocess:(a,c,d)=>2>a[3].value.length?d:{type:"condition_destructive",left:a[0],right:a[3],value:a[2].value,line:a[0].line,lineBreaks:a[0].lineBreaks,offset:a[0].offset,col:a[0].col}},{name:"condition",symbols:["_value","_",{literal:"in"},"_","_value"],postprocess:a=>({type:"in",from:a[4],value:a[0]})},
{name:"condition",symbols:["_value","_",{literal:"??"},"_","_value"],postprocess:a=>({type:"nullish_check",condition:a[0],value:a[4]})},{name:"condition",symbols:["_value"],postprocess:a=>({type:"value",value:a[0],line:a[0].line,lineBreaks:a[0].lineBreaks,offset:a[0].offset,col:a[0].col})},{name:"statement_condition",symbols:["_","condition"],postprocess:a=>a[1]},{name:"debugging$subexpression$1",symbols:[{literal:"LOG"}]},{name:"debugging$subexpression$1",symbols:[{literal:"print"}]},{name:"debugging$ebnf$1$subexpression$1",
symbols:["__",{literal:"if"}]},{name:"debugging$ebnf$1",symbols:["debugging$ebnf$1$subexpression$1"],postprocess:b},{name:"debugging$ebnf$1",symbols:[],postprocess:function(a){return null}},{name:"debugging",symbols:["debugging$subexpression$1","debugging$ebnf$1","debugging_body"],postprocess:a=>({type:"debugging",method:"log",conditional:a[1],value:a[2],line:a[0].line,col:a[0].col})},{name:"debugging$ebnf$2$subexpression$1",symbols:["__",{literal:"if"}]},{name:"debugging$ebnf$2",symbols:["debugging$ebnf$2$subexpression$1"],
postprocess:b},{name:"debugging$ebnf$2",symbols:[],postprocess:function(a){return null}},{name:"debugging",symbols:[{literal:"ERROR"},"debugging$ebnf$2","debugging_body"],postprocess:a=>({type:"debugging",method:"error",conditional:a[1],value:a[2],line:a[0].line,col:a[0].col})},{name:"debugging_body",symbols:["__","value"],postprocess:a=>a[1]},{name:"debugging_body",symbols:["_nbsp","arguments"],postprocess:a=>({type:"arguments",value:a[1],line:a[1].line,col:a[1].col})},{name:"html",symbols:[{literal:"#"},
{literal:"{"},"_","value","_",{literal:"}"}],postprocess:a=>e(a[0],{type:"html_text",value:a[3]})},{name:"html$ebnf$1",symbols:[]},{name:"html$ebnf$1$subexpression$1",symbols:["_","html_content"],postprocess:a=>a[1]},{name:"html$ebnf$1",symbols:["html$ebnf$1","html$ebnf$1$subexpression$1"],postprocess:function(a){return a[0].concat([a[1]])}},{name:"html",symbols:["opening_tag","html$ebnf$1","_","closing_tag"],postprocess:function(a){if(!Array.isArray(a[0][0].value)&&a[0][0].value!=a[3].value)throw Error(`Opening tag does not much the closing tag at ${a[0].line}:${a[0].col}`);
return e(a[0][0],{type:"html_expression",opening_tag:a[0][0].text,closing_tag:a[3].value,value:a[1],attributes:a[0][1]})}},{name:"html$ebnf$2$subexpression$1",symbols:[{literal:"#"},"identifier"]},{name:"html$ebnf$2",symbols:["html$ebnf$2$subexpression$1"],postprocess:b},{name:"html$ebnf$2",symbols:[],postprocess:function(a){return null}},{name:"html$ebnf$3",symbols:[]},{name:"html$ebnf$3$subexpression$1",symbols:[{literal:"."},"identifier"]},{name:"html$ebnf$3",symbols:["html$ebnf$3","html$ebnf$3$subexpression$1"],
postprocess:function(a){return a[0].concat([a[1]])}},{name:"html",symbols:[{literal:"<"},"identifier","html$ebnf$2","html$ebnf$3",{literal:"/"},{literal:">"}],postprocess:a=>e(a[0],{type:"html",value:a[1],id:a[2]?a[2][1]:null,classList:a[3].length?a[3].map(c=>c[1]):null})},{name:"opening_tag$ebnf$1$subexpression$1",symbols:["__","attrubutes"],postprocess:a=>a[1]},{name:"opening_tag$ebnf$1",symbols:["opening_tag$ebnf$1$subexpression$1"],postprocess:b},{name:"opening_tag$ebnf$1",symbols:[],postprocess:function(a){return null}},
{name:"opening_tag",symbols:[{literal:"<"},"identifier","opening_tag$ebnf$1","_",{literal:">"}],postprocess:a=>[a[1],a[2]?a[2]:[]]},{name:"closing_tag",symbols:[{literal:"<"},{literal:"/"},"identifier",{literal:">"}],postprocess:a=>a[2]},{name:"html_content",symbols:["html_string"],postprocess:a=>({type:"html_string",value:a[0]})},{name:"html_content$ebnf$1$subexpression$1",symbols:["__","html_string"],postprocess:a=>a[1]},{name:"html_content$ebnf$1",symbols:["html_content$ebnf$1$subexpression$1"]},
{name:"html_content$ebnf$1$subexpression$2",symbols:["__","html_string"],postprocess:a=>a[1]},{name:"html_content$ebnf$1",symbols:["html_content$ebnf$1","html_content$ebnf$1$subexpression$2"],postprocess:function(a){return a[0].concat([a[1]])}},{name:"html_content",symbols:["html_string","html_content$ebnf$1"],postprocess:a=>({type:"html_string",value:a[0],additions:a[1]})},{name:"html_content",symbols:["html"],postprocess:a=>a[0]},{name:"html_string",symbols:["string"],postprocess:a=>a},{name:"attrubutes$ebnf$1",
symbols:[]},{name:"attrubutes$ebnf$1$subexpression$1",symbols:["__","var_reassign"]},{name:"attrubutes$ebnf$1",symbols:["attrubutes$ebnf$1","attrubutes$ebnf$1$subexpression$1"],postprocess:function(a){return a[0].concat([a[1]])}},{name:"attrubutes",symbols:["var_reassign","attrubutes$ebnf$1"],postprocess:a=>{let c=[a[0]];for(let d in a[1])c.push(a[1][d][1]);return c}},{name:"array",symbols:[{literal:"["},"_",{literal:"]"}],postprocess:a=>{a[0].value=[];a[0].type="array";delete a[0].text;return a[0]}},
{name:"array$ebnf$1",symbols:[]},{name:"array$ebnf$1$subexpression$1",symbols:["_",{literal:","},"_","value"]},{name:"array$ebnf$1",symbols:["array$ebnf$1","array$ebnf$1$subexpression$1"],postprocess:function(a){return a[0].concat([a[1]])}},{name:"array$ebnf$2$subexpression$1",symbols:["_",{literal:","}]},{name:"array$ebnf$2",symbols:["array$ebnf$2$subexpression$1"],postprocess:b},{name:"array$ebnf$2",symbols:[],postprocess:function(a){return null}},{name:"array",symbols:[{literal:"["},"_","value",
"array$ebnf$1","array$ebnf$2","_",{literal:"]"}],postprocess:a=>{let c=[a[2]];for(let d in a[3])c.push(a[3][d][3]);delete a[0].text;return Object.assign(a[0],{type:"array",value:c})}},{name:"array",symbols:[{literal:"["},"_","value","_",{literal:"through"},"_","value","_",{literal:"]"}],postprocess:a=>e(a[0],{type:"array_through",value:[a[2],a[6]]})},{name:"array_interactions$subexpression$1",symbols:[{literal:"PUSH"}]},{name:"array_interactions$subexpression$1",symbols:[{literal:"UNSHIFT"}]},{name:"array_interactions",
symbols:["array_interactions$subexpression$1","_","value","_",{literal:"INTO"},"_","prefixExp"],postprocess:a=>({type:"array_interactions",method:a[0][0],into:a[6],value:a[2],line:a[0].line,col:a[0].col})},{name:"array_interactions$subexpression$2",symbols:[{literal:"POP"}]},{name:"array_interactions$subexpression$2",symbols:[{literal:"SHIFT"}]},{name:"array_interactions",symbols:["array_interactions$subexpression$2","_","value"],postprocess:a=>({type:"array_interactions",method:a[0][0],value:a[2],
line:a[0].line,col:a[0].col})},{name:"array_interactions",symbols:[{literal:"..."},"value"],postprocess:a=>({type:"array_interactions",method:"spread",value:a[1],line:a[0].line,col:a[0].col})},{name:"bitwise$subexpression$1",symbols:[{literal:"|"}]},{name:"bitwise$subexpression$1",symbols:[{literal:"&"}]},{name:"bitwise$subexpression$1",symbols:[{literal:">>>"}]},{name:"bitwise$subexpression$1",symbols:[{literal:"<<"}]},{name:"bitwise$subexpression$1",symbols:[{literal:">>"}]},{name:"bitwise$subexpression$1",
symbols:[{literal:"^"}]},{name:"bitwise",symbols:["bitwise","_nbsp","bitwise$subexpression$1","_","base"],postprocess:a=>({type:"bitwise_middle",left:a[0],operator:a[2][0].value,right:a[4]})},{name:"bitwise",symbols:["new_statement"],postprocess:b},{name:"new_statement$subexpression$1",symbols:[{literal:"new"}]},{name:"new_statement$subexpression$1",symbols:[{literal:"await"}]},{name:"new_statement$subexpression$1",symbols:[{literal:"yield"}]},{name:"new_statement",symbols:["new_statement$subexpression$1",
"__","base"],postprocess:(a,c,d)=>["new","await","yield"].includes(a[2].type)?d:e(a[0][0],{type:a[0][0].text,value:a[2]})},{name:"new_statement",symbols:["base"],postprocess:b},{name:"base",symbols:["parenthesized"],postprocess:b},{name:"base",symbols:["Var"],postprocess:b},{name:"base",symbols:["string"],postprocess:b},{name:"base",symbols:["bigInt"],postprocess:b},{name:"base",symbols:["number"],postprocess:b},{name:"base",symbols:["array"],postprocess:b},{name:"base",symbols:["convert"],postprocess:b},
{name:"base",symbols:["object"],postprocess:b},{name:"base",symbols:[{literal:"safeValue"},"_","arguments"],postprocess:a=>({type:"safeValue",value:a[2],line:a[0].line,col:a[0].col})},{name:"sum$subexpression$1",symbols:[{literal:"+"}]},{name:"sum$subexpression$1",symbols:[{literal:"-"}]},{name:"sum",symbols:["sum","_nbsp","sum$subexpression$1","_","product"],postprocess:a=>{var c=a[0],d=a[4],f=a[2][0].value;var g="number"==a[0].type&&"number"==a[4].type?"+"==a[2][0].value?a[0].value+a[4].value:a[0].value-
a[4].value:null;return{type:"sum",left:c,right:d,operator:f,value:g,line:a[0].line,col:a[0].col}}},{name:"sum",symbols:["product"],postprocess:b},{name:"product$subexpression$1",symbols:[{literal:"*"}]},{name:"product$subexpression$1",symbols:[{literal:"/"}]},{name:"product",symbols:["product","_nbsp","product$subexpression$1","_","unary"],postprocess:a=>{var c=a[0],d=a[4],f=a[2][0].value;var g="number"==a[0].type&&"number"==a[4].type?"*"==a[2][0].value?a[0].value*a[4].value:a[0].value/a[4].value:
null;return{type:"product",left:c,right:d,operator:f,value:g,line:a[0].line,col:a[0].col}}},{name:"product",symbols:["unary"],postprocess:b},{name:"unary",symbols:[{literal:"-"},"_nbsp","unary"],postprocess:a=>({type:"number_negative",value:a[2],line:a[0].line,col:a[0].col})},{name:"unary$ebnf$1",symbols:[{literal:"~"}]},{name:"unary$ebnf$1",symbols:["unary$ebnf$1",{literal:"~"}],postprocess:function(a){return a[0].concat([a[1]])}},{name:"unary",symbols:["unary$ebnf$1","_nbsp","pow"],postprocess:a=>
({type:"bitwise_not",operator:a[0].map(c=>c.value).join(""),value:a[2],line:a[0].line,col:a[0].col})},{name:"unary",symbols:["pow"],postprocess:b},{name:"pow$subexpression$1",symbols:[{literal:"**"}]},{name:"pow$subexpression$1",symbols:[{literal:"%"}]},{name:"pow",symbols:["pow","_nbsp","pow$subexpression$1","_","unary"],postprocess:a=>{var c=a[0],d=a[4],f=a[2][0].value;var g="number"==a[0].type&&"number"==a[4].type?"**"==a[2][0].value?a[0].value**a[4].value:a[0].value%a[4].value:null;return{type:"pow",
left:c,right:d,operator:f,value:g,line:a[0].line,col:a[0].col}}},{name:"pow",symbols:["pow","_nbsp","operator","__","unary"],postprocess:a=>({type:"pow",left:a[0],right:a[4],operator:a[2].value,value:null,line:a[0].line,col:a[0].col})},{name:"pow",symbols:["bitwise"],postprocess:b},{name:"value",symbols:["condition"],postprocess:b},{name:"_value",symbols:["prefixExp"],postprocess:b},{name:"_value",symbols:[{literal:"!"},"_","prefixExp"],postprocess:a=>({type:"boolean_reversed",value:a[2],line:a[0].line,
col:a[0].col})},{name:"_value",symbols:["prefixExp","__",{literal:"instanceof"},"__","prefixExp"],postprocess:a=>({type:"instanceof",left:a[0],value:a[4],line:a[0].line,col:a[0].col})},{name:"_value",symbols:["myNull"],postprocess:b},{name:"_value",symbols:[{literal:"new"},"_",{literal:"."},"_",{literal:"target"}],postprocess:a=>({type:"new.target",line:a[0].line,col:a[0].col})},{name:"_value",symbols:[{literal:"void"},"_nbsp","arguments"],postprocess:a=>({type:"void",value:a[2],line:a[0].line,col:a[0].col})},
{name:"_value",symbols:["ternary"],postprocess:b},{name:"prefixExp",symbols:["sum"],postprocess:b},{name:"prefixExp",symbols:["annonymous_function"],postprocess:b},{name:"prefixExp",symbols:["regexp"],postprocess:b},{name:"prefixExp",symbols:["boolean"],postprocess:b},{name:"prefixExp",symbols:["html"],postprocess:(a,c,d)=>{if(!r)throw new ReferenceError("HTML syntax is not imported. Use #include <HTML> first.");return a[0]}},{name:"parenthesized",symbols:[{literal:"("},"_","value","_",{literal:")"}],
postprocess:(a,c,d)=>({type:"expression_with_parenthesis",value:a[2],line:a[0].line,col:a[0].col})},{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1",h.has("space")?{type:"space"}:space],postprocess:function(a){return a[0].concat([a[1]])}},{name:"_",symbols:["_$ebnf$1"],postprocess:b},{name:"__",symbols:[h.has("space")?{type:"space"}:space],postprocess:b},{name:"EOL$ebnf$1",symbols:[/[\n]/]},{name:"EOL$ebnf$1",symbols:["EOL$ebnf$1",/[\n]/],postprocess:function(a){return a[0].concat([a[1]])}},
{name:"EOL",symbols:["EOL$ebnf$1"],postprocess:a=>"EOL"},{name:"EOL$ebnf$2$subexpression$1$ebnf$1",symbols:[]},{name:"EOL$ebnf$2$subexpression$1$ebnf$1",symbols:["EOL$ebnf$2$subexpression$1$ebnf$1",/[^\n]/],postprocess:function(a){return a[0].concat([a[1]])}},{name:"EOL$ebnf$2$subexpression$1$ebnf$2",symbols:[]},{name:"EOL$ebnf$2$subexpression$1$ebnf$2",symbols:["EOL$ebnf$2$subexpression$1$ebnf$2",/[\n]/],postprocess:function(a){return a[0].concat([a[1]])}},{name:"EOL$ebnf$2$subexpression$1",symbols:["_nbsp",
{literal:"/"},{literal:"/"},"EOL$ebnf$2$subexpression$1$ebnf$1","EOL$ebnf$2$subexpression$1$ebnf$2"]},{name:"EOL$ebnf$2",symbols:["EOL$ebnf$2$subexpression$1"],postprocess:b},{name:"EOL$ebnf$2",symbols:[],postprocess:function(a){return null}},{name:"EOL",symbols:["_nbsp",{literal:";"},"EOL$ebnf$2"],postprocess:a=>a[1]},{name:"EOL$ebnf$3",symbols:[]},{name:"EOL$ebnf$3",symbols:["EOL$ebnf$3",/[^\n]/],postprocess:function(a){return a[0].concat([a[1]])}},{name:"EOL$ebnf$4",symbols:[]},{name:"EOL$ebnf$4",
symbols:["EOL$ebnf$4",/[\n]/],postprocess:function(a){return a[0].concat([a[1]])}},{name:"EOL",symbols:["_nbsp",{literal:"/"},{literal:"/"},"EOL$ebnf$3","EOL$ebnf$4"],postprocess:a=>"EOL"},{name:"_nbsp$ebnf$1",symbols:[]},{name:"_nbsp$ebnf$1$subexpression$1",symbols:[/[ ]/]},{name:"_nbsp$ebnf$1$subexpression$1",symbols:[/[\t]/]},{name:"_nbsp$ebnf$1",symbols:["_nbsp$ebnf$1","_nbsp$ebnf$1$subexpression$1"],postprocess:function(a){return a[0].concat([a[1]])}},{name:"_nbsp",symbols:["_nbsp$ebnf$1"],postprocess:(a,
c,d)=>a[0].length&&/\n/g.test(a[0][0])?d:{type:"nbsp",value:""}},{name:"__nbsp$ebnf$1$subexpression$1",symbols:[/[ ]/]},{name:"__nbsp$ebnf$1$subexpression$1",symbols:[/[\t]/]},{name:"__nbsp$ebnf$1",symbols:["__nbsp$ebnf$1$subexpression$1"]},{name:"__nbsp$ebnf$1$subexpression$2",symbols:[/[ ]/]},{name:"__nbsp$ebnf$1$subexpression$2",symbols:[/[\t]/]},{name:"__nbsp$ebnf$1",symbols:["__nbsp$ebnf$1","__nbsp$ebnf$1$subexpression$2"],postprocess:function(a){return a[0].concat([a[1]])}},{name:"__nbsp",symbols:["__nbsp$ebnf$1"],
postprocess:(a,c,d)=>a[0].length&&/\n/g.test(a[0][0])?d:{type:"nbsp",value:" "}}],ParserStart:"process"};"undefined"!==typeof module&&"undefined"!==typeof module.exports?module.exports=h:window.grammar=h})();
